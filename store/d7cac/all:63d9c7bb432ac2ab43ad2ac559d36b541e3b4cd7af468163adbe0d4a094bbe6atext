{"type":"object","value":{"https://www.npmjs.com/package/chalk#keywords":"{\"type\":\"string\",\"value\":\"skip to:contentpackage searchsign in\\n❤\\n * Pro [/products/pro]\\n * Teams [/products/teams]\\n * Pricing [/products]\\n * Documentation [https://docs.npmjs.com]\\n\\nnpm\\n/\\n\\nSearch\\nSign Up [/signup]Sign In [/login]\\n\\n\\nCHALK\\nTypeScript icon, indicating that this package has built-in type declarations\\n[https://static-production.npmjs.com/255a118f56f5346b97e56325a1217a16.svg]\\n\\n5.3.0 • Public • Published 10 months ago\\n * Readme [?activeTab=readme]\\n * Code Beta [?activeTab=code]\\n * 0 Dependencies [?activeTab=dependencies]\\n * 111,061 Dependents [?activeTab=dependents]\\n * 38 Versions [?activeTab=versions]\\n\\n\\n\\n\\nChalk\\n[https://raw.githubusercontent.com/chalk/chalk/HEAD/media/logo.svg]https://github.com/chalk/chalk/blob/HEAD/media/logo.svg\\n\\n\\n\\n\\n> Terminal string styling done right\\n\\nCoverage Status\\n[https://camo.githubusercontent.com/37f639863ec839f3ddcaf808de232127d5da6966326210a045768fcf711938d6/68747470733a2f2f636f6465636f762e696f2f67682f6368616c6b2f6368616c6b2f6272616e63682f6d61696e2f67726170682f62616467652e737667]https://codecov.io/gh/chalk/chalk\\nnpm dependents\\n[https://camo.githubusercontent.com/3c4b9794b03b07d7285d8279d32a1a98fbf95e267c78e5116929bf34d838b11e/68747470733a2f2f62616467656e2e6e65742f6e706d2f646570656e64656e74732f6368616c6b]https://www.npmjs.com/package/chalk?activeTab=dependents\\nDownloads\\n[https://camo.githubusercontent.com/8eebeb0e0396221729a382534b09fd30054e57ff15a87bf3980a60842eb78851/68747470733a2f2f62616467656e2e6e65742f6e706d2f64742f6368616c6b]https://www.npmjs.com/package/chalk\\nrun on repl.it\\n[https://camo.githubusercontent.com/67737731423463bf65f6f496bac80eb2d4ddef848ff54fb03362904fd73cf303/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52756e5f6f6e5f5265706c69742d6632363230373f6c6f676f3d7265706c6974266c6f676f436f6c6f723d7768697465]https://repl.it/github/chalk/chalk\\n\\n[https://raw.githubusercontent.com/chalk/chalk/HEAD/media/screenshot.png]https://github.com/chalk/chalk/blob/HEAD/media/screenshot.png\\n\\n\\n--------------------------------------------------------------------------------\\n\\nSindre Sorhus' open source work is supported by the community on GitHub Sponsors\\n[https://github.com/sponsors/sindresorhus]\\n\\nSpecial thanks to:\\n\\n[https://camo.githubusercontent.com/a9462676e32c135261446342a9f984326a1d847cef8c75fabe1951634406c909/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f7374616e646172642d726573756d652d6c6f676f2e737667]\\nhttps://standardresume.co/tech\\n\\n[https://camo.githubusercontent.com/79db9f0fc2148f43b0dc9c23ad73b185006f219552f3192a64a72ce0a028366a/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f7265746f6f6c2d6c6f676f2e737667]\\nhttps://retool.com/?utm_campaign=sindresorhus\\n\\n\\nStrapi\\n[https://camo.githubusercontent.com/f4e2f908dbc412a5fdde35b465f0725e0f2b0f4d04ebdbc75a856df10e0f5a07/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f7374726170692d6c6f676f2d77686974652d62672e706e67]\\nStrapi is the leading open-source headless CMS.\\nIt’s 100% JavaScript, fully customizable, and developer-first.\\n[https://strapi.io/?ref=sindresorhus]\\n\\n\\nStackAid\\n[https://camo.githubusercontent.com/33f8fc8095c3a8f88c8871e868462bafab795832f12dd1c880993253e783c4f8/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f737461636b6169642d6c6f676f2e706e67]\\nFund your open source dependencies\\n[https://www.stackaid.us/?utm_campaign=sindre]\\n\\n\\n\\n--------------------------------------------------------------------------------\\n\\n\\n\\nHIGHLIGHTS\\n\\n * Expressive API\\n * Highly performant\\n * No dependencies\\n * Ability to nest styles\\n * 256/Truecolor color support\\n * Auto-detects color support\\n * Doesn't extend String.prototype\\n * Clean and focused\\n * Actively maintained\\n * Used by ~86,000 packages [https://www.npmjs.com/browse/depended/chalk] as of\\n   October 4, 2022\\n\\n\\nINSTALL\\n\\nnpm install chalk\\n\\nIMPORTANT: Chalk 5 is ESM. If you want to use Chalk with TypeScript or a build\\ntool, you will probably want to use Chalk 4 for now. Read more.\\n[https://github.com/chalk/chalk/releases/tag/v5.0.0]\\n\\n\\nUSAGE\\n\\nimport chalk from 'chalk';\\n\\nconsole.log(chalk.blue('Hello world!'));\\n\\nChalk comes with an easy to use composable API where you just chain and nest the\\nstyles you want.\\n\\nimport chalk from 'chalk';\\n\\nconst log = console.log;\\n\\n// Combine styled and normal strings\\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\\n\\n// Compose multiple styles using the chainable API\\nlog(chalk.blue.bgRed.bold('Hello world!'));\\n\\n// Pass in multiple arguments\\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\\n\\n// Nest styles\\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\\n\\n// Nest styles of the same type even (color, underline, background)\\nlog(chalk.green(\\n\\t'I am a green line ' +\\n\\tchalk.blue.underline.bold('with a blue substring') +\\n\\t' that becomes green again!'\\n));\\n\\n// ES2015 template literal\\nlog(`\\nCPU: ${chalk.red('90%')}\\nRAM: ${chalk.green('40%')}\\nDISK: ${chalk.yellow('70%')}\\n`);\\n\\n// Use RGB colors in terminal emulators that support it.\\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\\n\\nEasily define your own themes:\\n\\nimport chalk from 'chalk';\\n\\nconst error = chalk.bold.red;\\nconst warning = chalk.hex('#FFA500'); // Orange color\\n\\nconsole.log(error('Error!'));\\nconsole.log(warning('Warning!'));\\n\\nTake advantage of console.log string substitution\\n[https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args]:\\n\\nimport chalk from 'chalk';\\n\\nconst name = 'Sindre';\\nconsole.log(chalk.green('Hello %s'), name);\\n//=> 'Hello Sindre'\\n\\n\\nAPI\\n\\n\\nCHALK.<STYLE>[.<STYLE>...](STRING, [STRING...])\\n\\nExample: chalk.red.bold.underline('Hello', 'world');\\n\\nChain styles and call the last one as a method with a string argument. Order\\ndoesn't matter, and later styles take precedent in case of a conflict. This\\nsimply means that chalk.red.yellow.green is equivalent to chalk.green.\\n\\nMultiple arguments will be separated by space.\\n\\n\\nCHALK.LEVEL\\n\\nSpecifies the level of color support.\\n\\nColor support is automatically detected, but you can override it by setting the\\nlevel property. You should however only do this in your own code as it applies\\nglobally to all Chalk consumers.\\n\\nIf you need to change this in a reusable module, create a new instance:\\n\\nimport {Chalk} from 'chalk';\\n\\nconst customChalk = new Chalk({level: 0});\\n\\nLevel Description 0 All colors disabled 1 Basic color support (16 colors) 2 256\\ncolor support 3 Truecolor support (16 million colors)\\n\\n\\nSUPPORTSCOLOR\\n\\nDetect whether the terminal supports color\\n[https://github.com/chalk/supports-color]. Used internally and handled for you,\\nbut exposed for convenience.\\n\\nCan be overridden by the user with the flags --color and --no-color. For\\nsituations where using --color is not possible, use the environment variable\\nFORCE_COLOR=1 (level 1), FORCE_COLOR=2 (level 2), or FORCE_COLOR=3 (level 3) to\\nforcefully enable color, or FORCE_COLOR=0 to forcefully disable. The use of\\nFORCE_COLOR overrides all other color support checks.\\n\\nExplicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m\\nflags, respectively.\\n\\n\\nCHALKSTDERR AND SUPPORTSCOLORSTDERR\\n\\nchalkStderr contains a separate instance configured with color support detected\\nfor stderr stream instead of stdout. Override rules from supportsColor apply to\\nthis too. supportsColorStderr is exposed for convenience.\\n\\n\\nMODIFIERNAMES, FOREGROUNDCOLORNAMES, BACKGROUNDCOLORNAMES, AND COLORNAMES\\n\\nAll supported style strings are exposed as an array of strings for convenience.\\ncolorNames is the combination of foregroundColorNames and backgroundColorNames.\\n\\nThis can be useful if you wrap Chalk and need to validate input:\\n\\nimport {modifierNames, foregroundColorNames} from 'chalk';\\n\\nconsole.log(modifierNames.includes('bold'));\\n//=> true\\n\\nconsole.log(foregroundColorNames.includes('pink'));\\n//=> false\\n\\n\\nSTYLES\\n\\n\\nMODIFIERS\\n\\n * reset - Reset the current style.\\n * bold - Make the text bold.\\n * dim - Make the text have lower opacity.\\n * italic - Make the text italic. (Not widely supported)\\n * underline - Put a horizontal line below the text. (Not widely supported)\\n * overline - Put a horizontal line above the text. (Not widely supported)\\n * inverse- Invert background and foreground colors.\\n * hidden - Print the text but make it invisible.\\n * strikethrough - Puts a horizontal line through the center of the text. (Not\\n   widely supported)\\n * visible- Print the text only when Chalk has a color level above zero. Can be\\n   useful for things that are purely cosmetic.\\n\\n\\nCOLORS\\n\\n * black\\n * red\\n * green\\n * yellow\\n * blue\\n * magenta\\n * cyan\\n * white\\n * blackBright (alias: gray, grey)\\n * redBright\\n * greenBright\\n * yellowBright\\n * blueBright\\n * magentaBright\\n * cyanBright\\n * whiteBright\\n\\n\\nBACKGROUND COLORS\\n\\n * bgBlack\\n * bgRed\\n * bgGreen\\n * bgYellow\\n * bgBlue\\n * bgMagenta\\n * bgCyan\\n * bgWhite\\n * bgBlackBright (alias: bgGray, bgGrey)\\n * bgRedBright\\n * bgGreenBright\\n * bgYellowBright\\n * bgBlueBright\\n * bgMagentaBright\\n * bgCyanBright\\n * bgWhiteBright\\n\\n\\n256 AND TRUECOLOR COLOR SUPPORT\\n\\nChalk supports 256 colors and Truecolor [https://github.com/termstandard/colors]\\n(16 million colors) on supported terminal apps.\\n\\nColors are downsampled from 16 million RGB values to an ANSI color format that\\nis supported by the terminal emulator (or by specifying {level: n} as a Chalk\\noption). For example, Chalk configured to run at level 1 (basic color support)\\nwill downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\\n\\nExamples:\\n\\n * chalk.hex('#DEADED').underline('Hello, world!')\\n * chalk.rgb(15, 100, 204).inverse('Hello!')\\n\\nBackground versions of these models are prefixed with bg and the first level of\\nthe module capitalized (e.g. hex for foreground colors and bgHex for background\\ncolors).\\n\\n * chalk.bgHex('#DEADED').underline('Hello, world!')\\n * chalk.bgRgb(15, 100, 204).inverse('Hello!')\\n\\nThe following color models can be used:\\n\\n * rgb [https://en.wikipedia.org/wiki/RGB_color_model] - Example: chalk.rgb(255,\\n   136, 0).bold('Orange!')\\n * hex [https://en.wikipedia.org/wiki/Web_colors#Hex_triplet] - Example:\\n   chalk.hex('#FF8800').bold('Orange!')\\n * ansi256 [https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit] - Example:\\n   chalk.bgAnsi256(194)('Honeydew, more or less')\\n\\n\\nBROWSER SUPPORT\\n\\nSince Chrome 69, ANSI escape codes are natively supported in the developer\\nconsole.\\n\\n\\nWINDOWS\\n\\nIf you're on Windows, do yourself a favor and use Windows Terminal\\n[https://github.com/microsoft/terminal] instead of cmd.exe.\\n\\n\\nORIGIN STORY\\n\\ncolors.js [https://github.com/Marak/colors.js] used to be the most popular\\nstring styling module, but it has serious deficiencies like extending\\nString.prototype which causes all kinds of problems\\n[https://github.com/yeoman/yo/issues/68] and the package is unmaintained.\\nAlthough there are other packages, they either do too much or not enough. Chalk\\nis a clean and focused alternative.\\n\\n\\nRELATED\\n\\n * chalk-template [https://github.com/chalk/chalk-template] - Tagged template\\n   literals\\n   [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates]\\n   support for this module\\n * chalk-cli [https://github.com/chalk/chalk-cli] - CLI for this module\\n * ansi-styles [https://github.com/chalk/ansi-styles] - ANSI escape codes for\\n   styling strings in the terminal\\n * supports-color [https://github.com/chalk/supports-color] - Detect whether a\\n   terminal supports color\\n * strip-ansi [https://github.com/chalk/strip-ansi] - Strip ANSI escape codes\\n * strip-ansi-stream [https://github.com/chalk/strip-ansi-stream] - Strip ANSI\\n   escape codes from a stream\\n * has-ansi [https://github.com/chalk/has-ansi] - Check if a string has ANSI\\n   escape codes\\n * ansi-regex [https://github.com/chalk/ansi-regex] - Regular expression for\\n   matching ANSI escape codes\\n * wrap-ansi [https://github.com/chalk/wrap-ansi] - Wordwrap a string with ANSI\\n   escape codes\\n * slice-ansi [https://github.com/chalk/slice-ansi] - Slice a string with ANSI\\n   escape codes\\n * color-convert [https://github.com/qix-/color-convert] - Converts colors\\n   between different models\\n * chalk-animation [https://github.com/bokub/chalk-animation] - Animate strings\\n   in the terminal\\n * gradient-string [https://github.com/bokub/gradient-string] - Apply color\\n   gradients to strings\\n * chalk-pipe [https://github.com/LitoMore/chalk-pipe] - Create chalk style\\n   schemes with simpler style strings\\n * terminal-link [https://github.com/sindresorhus/terminal-link] - Create\\n   clickable links in the terminal\\n\\n\\nMAINTAINERS\\n\\n * Sindre Sorhus [https://github.com/sindresorhus]\\n * Josh Junon [https://github.com/qix-]\\n\\n\\nREADME\\n\\n\\nKEYWORDS\\n\\n * color [/search?q=keywords:color]\\n * colour [/search?q=keywords:colour]\\n * colors [/search?q=keywords:colors]\\n * terminal [/search?q=keywords:terminal]\\n * console [/search?q=keywords:console]\\n * cli [/search?q=keywords:cli]\\n * string [/search?q=keywords:string]\\n * ansi [/search?q=keywords:ansi]\\n * style [/search?q=keywords:style]\\n * styles [/search?q=keywords:styles]\\n * tty [/search?q=keywords:tty]\\n * formatting [/search?q=keywords:formatting]\\n * rgb [/search?q=keywords:rgb]\\n * 256 [/search?q=keywords:256]\\n * shell [/search?q=keywords:shell]\\n * xterm [/search?q=keywords:xterm]\\n * log [/search?q=keywords:log]\\n * logging [/search?q=keywords:logging]\\n * command-line [/search?q=keywords:command-line]\\n * text [/search?q=keywords:text]\\n\\n\\n\\n\\n\\n\\n\\n\\nPACKAGE SIDEBAR\\n\\n\\nINSTALL\\n\\nnpm i chalk\\n\\n\\nREPOSITORY\\n\\nGitgithub.com/chalk/chalk [https://github.com/chalk/chalk]\\n\\n\\nHOMEPAGE\\n\\ngithub.com/chalk/chalk#readme [https://github.com/chalk/chalk#readme]\\n\\nFund this package [https://github.com/chalk/chalk?sponsor=1]\\n\\n\\nDOWNLOADSWEEKLY DOWNLOADS\\n\\n277,102,321\\n\\n\\nVERSION\\n\\n5.3.0\\n\\n\\nLICENSE\\n\\nMIT\\n\\n\\nUNPACKED SIZE\\n\\n43.7 kB\\n\\n\\nTOTAL FILES\\n\\n12\\n\\n\\nLAST PUBLISH\\n\\n10 months ago\\n\\n\\nCOLLABORATORS\\n\\n * sindresorhus\\n   [/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci9kMzZhOTIyMzdjNzVjNTMzN2MxN2I2MGQ5MDY4NmJmOT9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.dDYAebLlFqNIyhWaiaemdRfFkjWlTwsEzFKHfFrqshM]/~sindresorhus\\n * qix\\n   [/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci9lNTBlYjk5MjFjZTgyNmJiYjBjODY1OGViYzE4M2JlMj9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.p1bsUbHgyLIuHyGtDB1fyC2nQL6Vy25KvlYl9Nzdnwk]/~qix\\n\\nTry on RunKit [https://runkit.com/npm/chalk]\\nReport malware\\n[/support?inquire=security&security-inquire=malware&package=chalk&version=5.3.0]\\n\\n\\nFOOTER\\n\\nhttps://github.com/npm\\nhttps://github.com\\n\\n\\nSUPPORT\\n\\n * Help [https://docs.npmjs.com]\\n * Advisories [https://github.com/advisories]\\n * Status [http://status.npmjs.org/]\\n * Contact npm [/support]\\n\\n\\nCOMPANY\\n\\n * About [/about]\\n * Blog [https://github.blog/tag/npm/]\\n * Press [/press]\\n\\n\\nTERMS & POLICIES\\n\\n * Policies [/policies/]\\n * Terms of Use [/policies/terms]\\n * Code of Conduct [/policies/conduct]\\n * Privacy [/policies/privacy]\\n\\n\"}"}}