{"type":"object","value":{"https://www.npmjs.com/package/ansi-escapes":"{\"type\":\"string\",\"value\":\"skip to:contentpackage searchsign in\\n❤\\n * Pro [/products/pro]\\n * Teams [/products/teams]\\n * Pricing [/products]\\n * Documentation [https://docs.npmjs.com]\\n\\nnpm\\n/\\n\\nSearch\\nSign Up [/signup]Sign In [/login]\\n\\n\\nANSI-ESCAPES\\nTypeScript icon, indicating that this package has built-in type declarations\\n[https://static-production.npmjs.com/255a118f56f5346b97e56325a1217a16.svg]\\n\\n7.0.0 • Public • Published an hour ago\\n * Readme [?activeTab=readme]\\n * Code Beta [?activeTab=code]\\n * 1 Dependency [?activeTab=dependencies]\\n * 2,098 Dependents [?activeTab=dependents]\\n * 24 Versions [?activeTab=versions]\\n\\n\\nANSI-ESCAPES\\n\\n> ANSI escape codes\\n> [https://www2.ccs.neu.edu/research/gpc/VonaUtils/vona/terminal/vtansi.htm] for\\n> manipulating the terminal\\n\\n\\nINSTALL\\n\\nnpm install ansi-escapes\\n\\n\\nUSAGE\\n\\nimport ansiEscapes from 'ansi-escapes';\\n\\n// Moves the cursor two rows up and to the left\\nprocess.stdout.write(ansiEscapes.cursorUp(2) + ansiEscapes.cursorLeft);\\n//=> '\\\\u001B[2A\\\\u001B[1000D'\\n\\nOr use named exports...\\n\\nimport {cursorUp, cursorLeft} from 'ansi-escapes';\\n\\n// etc, as above...\\n\\nYou can also use it in the browser with Xterm.js:\\n\\nimport ansiEscapes from 'ansi-escapes';\\nimport {Terminal} from 'xterm';\\nimport 'xterm/css/xterm.css';\\n\\nconst terminal = new Terminal({…});\\n\\n// Moves the cursor two rows up and to the left\\nterminal.write(ansiEscapes.cursorUp(2) + ansiEscapes.cursorLeft);\\n//=> '\\\\u001B[2A\\\\u001B[1000D'\\n\\n\\nAPI\\n\\n\\nCURSORTO(X, Y?)\\n\\nSet the absolute position of the cursor. x0 y0 is the top left of the screen.\\n\\n\\nCURSORMOVE(X, Y?)\\n\\nSet the position of the cursor relative to its current position.\\n\\n\\nCURSORUP(COUNT)\\n\\nMove cursor up a specific amount of rows. Default is 1.\\n\\n\\nCURSORDOWN(COUNT)\\n\\nMove cursor down a specific amount of rows. Default is 1.\\n\\n\\nCURSORFORWARD(COUNT)\\n\\nMove cursor forward a specific amount of columns. Default is 1.\\n\\n\\nCURSORBACKWARD(COUNT)\\n\\nMove cursor backward a specific amount of columns. Default is 1.\\n\\n\\nCURSORLEFT\\n\\nMove cursor to the left side.\\n\\n\\nCURSORSAVEPOSITION\\n\\nSave cursor position.\\n\\n\\nCURSORRESTOREPOSITION\\n\\nRestore saved cursor position.\\n\\n\\nCURSORGETPOSITION\\n\\nGet cursor position.\\n\\n\\nCURSORNEXTLINE\\n\\nMove cursor to the next line.\\n\\n\\nCURSORPREVLINE\\n\\nMove cursor to the previous line.\\n\\n\\nCURSORHIDE\\n\\nHide cursor.\\n\\n\\nCURSORSHOW\\n\\nShow cursor.\\n\\n\\nERASELINES(COUNT)\\n\\nErase from the current cursor position up the specified amount of rows.\\n\\n\\nERASEENDLINE\\n\\nErase from the current cursor position to the end of the current line.\\n\\n\\nERASESTARTLINE\\n\\nErase from the current cursor position to the start of the current line.\\n\\n\\nERASELINE\\n\\nErase the entire current line.\\n\\n\\nERASEDOWN\\n\\nErase the screen from the current line down to the bottom of the screen.\\n\\n\\nERASEUP\\n\\nErase the screen from the current line up to the top of the screen.\\n\\n\\nERASESCREEN\\n\\nErase the screen and move the cursor the top left position.\\n\\n\\nSCROLLUP\\n\\nScroll display up one line.\\n\\n\\nSCROLLDOWN\\n\\nScroll display down one line.\\n\\n\\nCLEARSCREEN\\n\\nClear the terminal screen. (Viewport)\\n\\n\\nCLEARTERMINAL\\n\\nClear the whole terminal, including scrollback buffer. (Not just the visible\\npart of it)\\n\\n\\nENTERALTERNATIVESCREEN\\n\\nEnter the alternative screen [https://terminalguide.namepad.de/mode/p47/].\\n\\n\\nEXITALTERNATIVESCREEN\\n\\nExit the alternative screen [https://terminalguide.namepad.de/mode/p47/],\\nassuming enterAlternativeScreen was called before.\\n\\n\\nBEEP\\n\\nOutput a beeping sound.\\n\\n\\nLINK(TEXT, URL)\\n\\nCreate a clickable link.\\n\\nSupported terminals.\\n[https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda] Use\\nsupports-hyperlinks [https://github.com/jamestalmage/supports-hyperlinks] to\\ndetect link support.\\n\\n\\nIMAGE(FILEPATH, OPTIONS?)\\n\\nDisplay an image.\\n\\nSee term-img [https://github.com/sindresorhus/term-img] for a higher-level\\nmodule.\\n\\nINPUT\\n\\nType: Buffer\\n\\nBuffer of an image. Usually read in with fs.readFile().\\n\\nOPTIONS\\n\\nType: object\\n\\nWIDTH\\n\\nHEIGHT\\n\\nType: string | number\\n\\nThe width and height are given as a number followed by a unit, or the word\\n\\\"auto\\\".\\n\\n * N: N character cells.\\n * Npx: N pixels.\\n * N%: N percent of the session's width or height.\\n * auto: The image's inherent size will be used to determine an appropriate\\n   dimension.\\n\\nPRESERVEASPECTRATIO\\n\\nType: boolean\\nDefault: true\\n\\n\\nITERM.SETCWD(PATH?)\\n\\nType: string\\nDefault: process.cwd()\\n\\nInform iTerm2 [https://www.iterm2.com/documentation-escape-codes.html] of the\\ncurrent directory to help semantic history and enable Cmd-clicking relative\\npaths\\n[https://coderwall.com/p/b7e82q/quickly-open-files-in-iterm-with-cmd-click].\\n\\n\\nITERM.ANNOTATION(MESSAGE, OPTIONS?)\\n\\nCreates an escape code to display an \\\"annotation\\\" in iTerm2.\\n\\nAn annotation looks like this when shown:\\n\\n[https://user-images.githubusercontent.com/924465/64382136-b60ac700-cfe9-11e9-8a35-9682e8dc4b72.png]https://user-images.githubusercontent.com/924465/64382136-b60ac700-cfe9-11e9-8a35-9682e8dc4b72.png\\n\\nSee the iTerm Proprietary Escape Codes documentation\\n[https://iterm2.com/documentation-escape-codes.html] for more information.\\n\\nMESSAGE\\n\\nType: string\\n\\nThe message to display within the annotation.\\n\\nThe | character is disallowed and will be stripped.\\n\\nOPTIONS\\n\\nType: object\\n\\nLENGTH\\n\\nType: number\\nDefault: The remainder of the line\\n\\nNonzero number of columns to annotate.\\n\\nX\\n\\nType: number\\nDefault: Cursor position\\n\\nStarting X coordinate.\\n\\nMust be used with y and length.\\n\\nY\\n\\nType: number\\nDefault: Cursor position\\n\\nStarting Y coordinate.\\n\\nMust be used with x and length.\\n\\nISHIDDEN\\n\\nType: boolean\\nDefault: false\\n\\nCreate a \\\"hidden\\\" annotation.\\n\\nAnnotations created this way can be shown using the \\\"Show Annotations\\\" iTerm\\ncommand.\\n\\n\\nRELATED\\n\\n * ansi-styles [https://github.com/chalk/ansi-styles] - ANSI escape codes for\\n   styling strings in the terminal\\n\\n\\nREADME\\n\\n\\nKEYWORDS\\n\\n * ansi [/search?q=keywords:ansi]\\n * terminal [/search?q=keywords:terminal]\\n * console [/search?q=keywords:console]\\n * cli [/search?q=keywords:cli]\\n * string [/search?q=keywords:string]\\n * tty [/search?q=keywords:tty]\\n * escape [/search?q=keywords:escape]\\n * escapes [/search?q=keywords:escapes]\\n * formatting [/search?q=keywords:formatting]\\n * shell [/search?q=keywords:shell]\\n * xterm [/search?q=keywords:xterm]\\n * log [/search?q=keywords:log]\\n * logging [/search?q=keywords:logging]\\n * command-line [/search?q=keywords:command-line]\\n * text [/search?q=keywords:text]\\n * vt100 [/search?q=keywords:vt100]\\n * sequence [/search?q=keywords:sequence]\\n * control [/search?q=keywords:control]\\n * code [/search?q=keywords:code]\\n * codes [/search?q=keywords:codes]\\n * cursor [/search?q=keywords:cursor]\\n * iterm [/search?q=keywords:iterm]\\n * iterm2 [/search?q=keywords:iterm2]\\n * clear [/search?q=keywords:clear]\\n * screen [/search?q=keywords:screen]\\n * erase [/search?q=keywords:erase]\\n * scrollback [/search?q=keywords:scrollback]\\n\\n\\n\\n\\n\\n\\n\\n\\nPACKAGE SIDEBAR\\n\\n\\nINSTALL\\n\\nnpm i ansi-escapes\\n\\n\\nREPOSITORY\\n\\nGitgithub.com/sindresorhus/ansi-escapes\\n[https://github.com/sindresorhus/ansi-escapes]\\n\\n\\nHOMEPAGE\\n\\ngithub.com/sindresorhus/ansi-escapes#readme\\n[https://github.com/sindresorhus/ansi-escapes#readme]\\n\\nFund this package [https://github.com/sponsors/sindresorhus]\\n\\n\\nDOWNLOADSWEEKLY DOWNLOADS\\n\\n42,700,388\\n\\n\\nVERSION\\n\\n7.0.0\\n\\n\\nLICENSE\\n\\nMIT\\n\\n\\nUNPACKED SIZE\\n\\n17.9 kB\\n\\n\\nTOTAL FILES\\n\\n7\\n\\n\\nLAST PUBLISH\\n\\nan hour ago\\n\\n\\nCOLLABORATORS\\n\\n * sindresorhus\\n   [/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci9kMzZhOTIyMzdjNzVjNTMzN2MxN2I2MGQ5MDY4NmJmOT9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.dDYAebLlFqNIyhWaiaemdRfFkjWlTwsEzFKHfFrqshM]/~sindresorhus\\n\\nTry on RunKit [https://runkit.com/npm/ansi-escapes]\\nReport malware\\n[/support?inquire=security&security-inquire=malware&package=ansi-escapes&version=7.0.0]\\n\\n\\nFOOTER\\n\\nhttps://github.com/npm\\nhttps://github.com\\n\\n\\nSUPPORT\\n\\n * Help [https://docs.npmjs.com]\\n * Advisories [https://github.com/advisories]\\n * Status [http://status.npmjs.org/]\\n * Contact npm [/support]\\n\\n\\nCOMPANY\\n\\n * About [/about]\\n * Blog [https://github.blog/tag/npm/]\\n * Press [/press]\\n\\n\\nTERMS & POLICIES\\n\\n * Policies [/policies/]\\n * Terms of Use [/policies/terms]\\n * Code of Conduct [/policies/conduct]\\n * Privacy [/policies/privacy]\\n\\n\"}"}}