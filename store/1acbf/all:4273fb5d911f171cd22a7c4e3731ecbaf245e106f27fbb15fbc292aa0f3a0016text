{"type":"object","value":{"https://www.npmjs.com/package/@contentful/rich-text-html-renderer":"{\"type\":\"string\",\"value\":\"skip to:contentpackage searchsign in\\n❤\\n * Pro [/products/pro]\\n * Teams [/products/teams]\\n * Pricing [/products]\\n * Documentation [https://docs.npmjs.com]\\n\\nnpm\\n/\\n\\nSearch\\nSign Up [/signup]Sign In [/login]\\n\\n\\n@CONTENTFUL/RICH-TEXT-HTML-RENDERER\\nTypeScript icon, indicating that this package has built-in type declarations\\n[https://static-production.npmjs.com/255a118f56f5346b97e56325a1217a16.svg]\\n\\n16.3.5 • Public • Published 2 months ago\\n * Readme [?activeTab=readme]\\n * Code Beta [?activeTab=code]\\n * 2 Dependencies [?activeTab=dependencies]\\n * 72 Dependents [?activeTab=dependents]\\n * 67 Versions [?activeTab=versions]\\n\\n\\nRICH-TEXT-HTML-RENDERER\\n\\nHTML renderer for the Contentful rich text field type.\\n\\n\\nINSTALLATION\\n\\nUsing npm [http://npmjs.org/]:\\n\\nnpm install @contentful/rich-text-html-renderer\\n\\nUsing yarn [https://yarnpkg.com/]:\\n\\nyarn add @contentful/rich-text-html-renderer\\n\\n\\nUSAGE\\n\\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\\n\\nconst document = {\\n  nodeType: 'document',\\n  content: [\\n    {\\n      nodeType: 'paragraph',\\n      content: [\\n        {\\n          nodeType: 'text',\\n          value: 'Hello world!',\\n          marks: [],\\n        },\\n      ],\\n    },\\n  ],\\n};\\n\\ndocumentToHtmlString(document); // -> <p>Hello world!</p>\\n\\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\\n\\nconst document = {\\n  nodeType: 'document',\\n  content: [\\n    {\\n      nodeType: 'paragraph',\\n      content: [\\n        {\\n          nodeType: 'text',\\n          value: 'Hello',\\n          marks: [{ type: 'bold' }],\\n        },\\n        {\\n          nodeType: 'text',\\n          value: ' world!',\\n          marks: [{ type: 'italic' }],\\n        },\\n      ],\\n    },\\n  ],\\n};\\n\\ndocumentToHtmlString(document); // -> <p><b>Hello</b><u> world!</u></p>\\n\\nYou can also pass custom renderers for both marks and nodes as an optional\\nparameter like so:\\n\\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\\n\\nconst document = {\\n  nodeType: 'document',\\n  data: {},\\n  content: [\\n    {\\n      nodeType: 'paragraph',\\n      data:{},\\n      content: [\\n        {\\n          nodeType: 'text',\\n          value: 'Hello',\\n          marks: [{ type: 'bold' }],\\n          data: {}\\n        },\\n        {\\n          nodeType: 'text',\\n          value: ' world!',\\n          marks: [{ type: 'italic' }]\\n          data: {}\\n        },\\n      ],\\n    },\\n  ]\\n};\\n\\nconst options = {\\n  renderMark: {\\n    [MARKS.BOLD]: text => `<custom-bold>${text}<custom-bold>`\\n  },\\n  renderNode: {\\n    [BLOCKS.PARAGRAPH]: (node, next) => `<custom-paragraph>${next(node.content)}</custom-paragraph>`\\n  }\\n}\\n\\ndocumentToHtmlString(document, options);\\n// -> <custom-paragraph><custom-bold>Hello</custom-bold><u> world!</u></custom-paragraph>\\n\\nLast, but not least, you can pass a custom rendering component for an embedded\\nentry:\\n\\nimport { BLOCKS } from '@contentful/rich-text-types';\\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\\n\\nconst document = {\\n  nodeType: 'document',\\n  data: {},\\n  content: [\\n    {\\n      nodeType: 'embedded-entry-block',\\n      data: {\\n        target: (...)Link<'Entry'>(...);\\n      },\\n    },\\n  ]\\n};\\n\\nconst options = {\\n  renderNode: {\\n    [BLOCKS.EMBEDDED_ENTRY]: (node) => `<custom-component>${customComponentRenderer(node)}</custom-component>`\\n  }\\n}\\n\\ndocumentToHtmlString(document, options);\\n// -> <custom-component>(...)Link<'Entry'>(...)</custom-component>\\n\\nThe renderNode keys should be one of the following BLOCKS and INLINES properties\\nas defined in @contentful/rich-text-types\\n[https://www.npmjs.com/package/@contentful/rich-text-types]:\\n\\n * BLOCKS\\n   \\n   * DOCUMENT\\n   * PARAGRAPH\\n   * HEADING_1\\n   * HEADING_2\\n   * HEADING_3\\n   * HEADING_4\\n   * HEADING_5\\n   * HEADING_6\\n   * UL_LIST\\n   * OL_LIST\\n   * LIST_ITEM\\n   * QUOTE\\n   * HR\\n   * EMBEDDED_ENTRY\\n   * EMBEDDED_ASSET\\n   * EMBEDDED_RESOURCE\\n\\n * INLINES\\n   \\n   * EMBEDDED_ENTRY (this is different from the BLOCKS.EMBEDDED_ENTRY)\\n   * EMBEDDED_RESOURCE\\n   * HYPERLINK\\n   * ENTRY_HYPERLINK\\n   * ASSET_HYPERLINK\\n   * RESOURCE_HYPERLINK\\n\\nThe renderMark keys should be one of the following MARKS properties as defined\\nin @contentful/rich-text-types\\n[https://www.npmjs.com/package/@contentful/rich-text-types]:\\n\\n * BOLD\\n * ITALIC\\n * UNDERLINE\\n * CODE\\n * SUPERSCRIPT\\n * SUBSCRIPT\\n\\nPRESERVING WHITESPACE\\n\\nIn your HTML rendering options, you can utilize the preserveWhitespace boolean\\nflag. When set to true, this flag ensures that spaces and line breaks in the\\nContentful rich text content are preserved in the rendered HTML. Specifically,\\nit replaces consecutive spaces with &nbsp; entities and retains line breaks\\nusing <br /> tags. This capability is particularly beneficial for content that\\nhas specific formatting requirements involving spaces and line breaks.\\n\\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\\n\\nconst document = {\\n  nodeType: 'document',\\n  content: [\\n    {\\n      nodeType: 'paragraph',\\n      content: [\\n        {\\n          nodeType: 'text',\\n          value: 'Hello     world!',\\n          marks: [],\\n        },\\n      ],\\n    },\\n  ],\\n};\\n\\nconst options = {\\n  preserveWhitespace: true,\\n};\\n\\ndocumentToHtmlString(document, options);\\n// -> <p>Hello&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;world!</p>\\n\\nWith this configuration, the HTML output retains the spaces found between\\n\\\"Hello\\\" and \\\"world!\\\".\\n\\n\\nREADME\\n\\n\\nKEYWORDS\\n\\nnone\\n\\n\\n\\n\\n\\n\\n\\nPACKAGE SIDEBAR\\n\\n\\nINSTALL\\n\\nnpm i @contentful/rich-text-html-renderer\\n\\n\\nREPOSITORY\\n\\nGitgithub.com/contentful/rich-text [https://github.com/contentful/rich-text]\\n\\n\\nHOMEPAGE\\n\\ngithub.com/contentful/rich-text#readme\\n[https://github.com/contentful/rich-text#readme]\\n\\n\\nDOWNLOADSWEEKLY DOWNLOADS\\n\\n151,631\\n\\n\\nVERSION\\n\\n16.3.5\\n\\n\\nLICENSE\\n\\nMIT\\n\\n\\nUNPACKED SIZE\\n\\n133 kB\\n\\n\\nTOTAL FILES\\n\\n59\\n\\n\\nLAST PUBLISH\\n\\n2 months ago\\n\\n\\nCOLLABORATORS\\n\\n * michaelpearce\\n   [/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci9hYzUwYzU4Yzc0YTBlMGQ4MDg3ODBlNTMzZjE0N2ExOT9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.VF_brgWV1GXyiy7Gw8rfXIM40sR2zRyRrRKaYwrwRls]/~michaelpearce\\n * it-internal\\n   [/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci80NDMxYThmODIzZjE4YWFjZGVjMjNlZWI2OTk5ZDE1OT9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.VeUJxrBvScJzmk9du8QhYeJzx7GOUX27T6EUFSVaMBE]/~it-internal\\n * whydah-gally\\n   [/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci9hODQ4MmJhMWM3Nzk3ZjcwNGE3OGUyZGU5Yzk1MGQ1NT9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.qBgNtsfKv8J4xjHR0c0rbjcYwdd9szsLINt2T198C9Y]/~whydah-gally\\n * contentful-ecosystem\\n   [/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84ZDE0YmZlOTJhZTdjYWUyZmFmZTQ0YzRiZjIyZjFhMz9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.DsBvGuYzjZmB8OECSbwrYm8OqTTwQR_PJVx4zXB1nm0]/~contentful-ecosystem\\n\\nTry on RunKit [https://runkit.com/npm/%40contentful%2Frich-text-html-renderer]\\nReport malware\\n[/support?inquire=security&security-inquire=malware&package=%40contentful%2Frich-text-html-renderer&version=16.3.5]\\n\\n\\nFOOTER\\n\\nhttps://github.com/npm\\nhttps://github.com\\n\\n\\nSUPPORT\\n\\n * Help [https://docs.npmjs.com]\\n * Advisories [https://github.com/advisories]\\n * Status [http://status.npmjs.org/]\\n * Contact npm [/support]\\n\\n\\nCOMPANY\\n\\n * About [/about]\\n * Blog [https://github.blog/tag/npm/]\\n * Press [/press]\\n\\n\\nTERMS & POLICIES\\n\\n * Policies [/policies/]\\n * Terms of Use [/policies/terms]\\n * Code of Conduct [/policies/conduct]\\n * Privacy [/policies/privacy]\\n\\n\"}"}}